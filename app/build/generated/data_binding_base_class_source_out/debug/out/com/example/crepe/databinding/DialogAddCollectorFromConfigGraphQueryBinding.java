// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromConfigGraphQueryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton closeGraphQueryPopupImageButton;

  @NonNull
  public final TextView commentOnGraphQuery;

  @NonNull
  public final TextView commentOnOpenAppButton;

  @NonNull
  public final Button graphQueryAddAnotherButton;

  @NonNull
  public final Button graphQueryBackButton;

  @NonNull
  public final EditText graphQueryEditText;

  @NonNull
  public final Button graphQueryNextButton;

  @NonNull
  public final TextView graphQueryPopupTitle;

  @NonNull
  public final Button openAppButton;

  private DialogAddCollectorFromConfigGraphQueryBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton closeGraphQueryPopupImageButton, @NonNull TextView commentOnGraphQuery,
      @NonNull TextView commentOnOpenAppButton, @NonNull Button graphQueryAddAnotherButton,
      @NonNull Button graphQueryBackButton, @NonNull EditText graphQueryEditText,
      @NonNull Button graphQueryNextButton, @NonNull TextView graphQueryPopupTitle,
      @NonNull Button openAppButton) {
    this.rootView = rootView;
    this.closeGraphQueryPopupImageButton = closeGraphQueryPopupImageButton;
    this.commentOnGraphQuery = commentOnGraphQuery;
    this.commentOnOpenAppButton = commentOnOpenAppButton;
    this.graphQueryAddAnotherButton = graphQueryAddAnotherButton;
    this.graphQueryBackButton = graphQueryBackButton;
    this.graphQueryEditText = graphQueryEditText;
    this.graphQueryNextButton = graphQueryNextButton;
    this.graphQueryPopupTitle = graphQueryPopupTitle;
    this.openAppButton = openAppButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromConfigGraphQueryBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromConfigGraphQueryBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_config_graph_query, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromConfigGraphQueryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeGraphQueryPopupImageButton;
      ImageButton closeGraphQueryPopupImageButton = ViewBindings.findChildViewById(rootView, id);
      if (closeGraphQueryPopupImageButton == null) {
        break missingId;
      }

      id = R.id.commentOnGraphQuery;
      TextView commentOnGraphQuery = ViewBindings.findChildViewById(rootView, id);
      if (commentOnGraphQuery == null) {
        break missingId;
      }

      id = R.id.commentOnOpenAppButton;
      TextView commentOnOpenAppButton = ViewBindings.findChildViewById(rootView, id);
      if (commentOnOpenAppButton == null) {
        break missingId;
      }

      id = R.id.graphQueryAddAnotherButton;
      Button graphQueryAddAnotherButton = ViewBindings.findChildViewById(rootView, id);
      if (graphQueryAddAnotherButton == null) {
        break missingId;
      }

      id = R.id.graphQueryBackButton;
      Button graphQueryBackButton = ViewBindings.findChildViewById(rootView, id);
      if (graphQueryBackButton == null) {
        break missingId;
      }

      id = R.id.graphQueryEditText;
      EditText graphQueryEditText = ViewBindings.findChildViewById(rootView, id);
      if (graphQueryEditText == null) {
        break missingId;
      }

      id = R.id.graphQueryNextButton;
      Button graphQueryNextButton = ViewBindings.findChildViewById(rootView, id);
      if (graphQueryNextButton == null) {
        break missingId;
      }

      id = R.id.graphQueryPopupTitle;
      TextView graphQueryPopupTitle = ViewBindings.findChildViewById(rootView, id);
      if (graphQueryPopupTitle == null) {
        break missingId;
      }

      id = R.id.openAppButton;
      Button openAppButton = ViewBindings.findChildViewById(rootView, id);
      if (openAppButton == null) {
        break missingId;
      }

      return new DialogAddCollectorFromConfigGraphQueryBinding((ConstraintLayout) rootView,
          closeGraphQueryPopupImageButton, commentOnGraphQuery, commentOnOpenAppButton,
          graphQueryAddAnotherButton, graphQueryBackButton, graphQueryEditText,
          graphQueryNextButton, graphQueryPopupTitle, openAppButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

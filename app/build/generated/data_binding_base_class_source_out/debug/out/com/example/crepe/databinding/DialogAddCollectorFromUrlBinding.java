// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromUrlBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addFromUrlAddButton;

  @NonNull
  public final Button addFromUrlCancelButton;

  @NonNull
  public final TextView commentOnUrl;

  @NonNull
  public final TextView hintEnterUrl;

  @NonNull
  public final ConstraintLayout popupBox;

  @NonNull
  public final EditText urlEditText;

  @NonNull
  public final TextView urlPopupTitle;

  private DialogAddCollectorFromUrlBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addFromUrlAddButton, @NonNull Button addFromUrlCancelButton,
      @NonNull TextView commentOnUrl, @NonNull TextView hintEnterUrl,
      @NonNull ConstraintLayout popupBox, @NonNull EditText urlEditText,
      @NonNull TextView urlPopupTitle) {
    this.rootView = rootView;
    this.addFromUrlAddButton = addFromUrlAddButton;
    this.addFromUrlCancelButton = addFromUrlCancelButton;
    this.commentOnUrl = commentOnUrl;
    this.hintEnterUrl = hintEnterUrl;
    this.popupBox = popupBox;
    this.urlEditText = urlEditText;
    this.urlPopupTitle = urlPopupTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromUrlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromUrlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_url, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromUrlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addFromUrlAddButton;
      Button addFromUrlAddButton = ViewBindings.findChildViewById(rootView, id);
      if (addFromUrlAddButton == null) {
        break missingId;
      }

      id = R.id.addFromUrlCancelButton;
      Button addFromUrlCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (addFromUrlCancelButton == null) {
        break missingId;
      }

      id = R.id.commentOnUrl;
      TextView commentOnUrl = ViewBindings.findChildViewById(rootView, id);
      if (commentOnUrl == null) {
        break missingId;
      }

      id = R.id.hintEnterUrl;
      TextView hintEnterUrl = ViewBindings.findChildViewById(rootView, id);
      if (hintEnterUrl == null) {
        break missingId;
      }

      ConstraintLayout popupBox = (ConstraintLayout) rootView;

      id = R.id.urlEditText;
      EditText urlEditText = ViewBindings.findChildViewById(rootView, id);
      if (urlEditText == null) {
        break missingId;
      }

      id = R.id.urlPopupTitle;
      TextView urlPopupTitle = ViewBindings.findChildViewById(rootView, id);
      if (urlPopupTitle == null) {
        break missingId;
      }

      return new DialogAddCollectorFromUrlBinding((ConstraintLayout) rootView, addFromUrlAddButton,
          addFromUrlCancelButton, commentOnUrl, hintEnterUrl, popupBox, urlEditText, urlPopupTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

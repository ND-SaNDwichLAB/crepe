// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromConfigDataFieldBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton closeDataFieldImageButton;

  @NonNull
  public final TextView commentOnDataField;

  @NonNull
  public final Button dataFieldBackButton;

  @NonNull
  public final Button dataFieldNextButton;

  @NonNull
  public final TextView dataFieldPopupTitle;

  @NonNull
  public final LinearLayout dataFiledLinearLayout;

  @NonNull
  public final TextView hintEnterDataField;

  private DialogAddCollectorFromConfigDataFieldBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton closeDataFieldImageButton, @NonNull TextView commentOnDataField,
      @NonNull Button dataFieldBackButton, @NonNull Button dataFieldNextButton,
      @NonNull TextView dataFieldPopupTitle, @NonNull LinearLayout dataFiledLinearLayout,
      @NonNull TextView hintEnterDataField) {
    this.rootView = rootView;
    this.closeDataFieldImageButton = closeDataFieldImageButton;
    this.commentOnDataField = commentOnDataField;
    this.dataFieldBackButton = dataFieldBackButton;
    this.dataFieldNextButton = dataFieldNextButton;
    this.dataFieldPopupTitle = dataFieldPopupTitle;
    this.dataFiledLinearLayout = dataFiledLinearLayout;
    this.hintEnterDataField = hintEnterDataField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromConfigDataFieldBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromConfigDataFieldBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_config_data_field, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromConfigDataFieldBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeDataFieldImageButton;
      ImageButton closeDataFieldImageButton = ViewBindings.findChildViewById(rootView, id);
      if (closeDataFieldImageButton == null) {
        break missingId;
      }

      id = R.id.commentOnDataField;
      TextView commentOnDataField = ViewBindings.findChildViewById(rootView, id);
      if (commentOnDataField == null) {
        break missingId;
      }

      id = R.id.dataFieldBackButton;
      Button dataFieldBackButton = ViewBindings.findChildViewById(rootView, id);
      if (dataFieldBackButton == null) {
        break missingId;
      }

      id = R.id.dataFieldNextButton;
      Button dataFieldNextButton = ViewBindings.findChildViewById(rootView, id);
      if (dataFieldNextButton == null) {
        break missingId;
      }

      id = R.id.dataFieldPopupTitle;
      TextView dataFieldPopupTitle = ViewBindings.findChildViewById(rootView, id);
      if (dataFieldPopupTitle == null) {
        break missingId;
      }

      id = R.id.dataFiledLinearLayout;
      LinearLayout dataFiledLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataFiledLinearLayout == null) {
        break missingId;
      }

      id = R.id.hintEnterDataField;
      TextView hintEnterDataField = ViewBindings.findChildViewById(rootView, id);
      if (hintEnterDataField == null) {
        break missingId;
      }

      return new DialogAddCollectorFromConfigDataFieldBinding((ConstraintLayout) rootView,
          closeDataFieldImageButton, commentOnDataField, dataFieldBackButton, dataFieldNextButton,
          dataFieldPopupTitle, dataFiledLinearLayout, hintEnterDataField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromUrlCollectorInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addCollectorFromUrlInfoCancel;

  @NonNull
  public final Button addCollectorFromUrlInfoCancel2;

  @NonNull
  public final TextView addCollectorFromUrlInfoDescription;

  @NonNull
  public final TextView appName;

  @NonNull
  public final TextView appNameTitle;

  @NonNull
  public final TextView collectorInfoTitle;

  @NonNull
  public final TextView descriptionTitle;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final TextView endDateTitle;

  @NonNull
  public final TextView ownerInfo;

  @NonNull
  public final TextView ownerTitle;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final TextView startDateTitle;

  private DialogAddCollectorFromUrlCollectorInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addCollectorFromUrlInfoCancel, @NonNull Button addCollectorFromUrlInfoCancel2,
      @NonNull TextView addCollectorFromUrlInfoDescription, @NonNull TextView appName,
      @NonNull TextView appNameTitle, @NonNull TextView collectorInfoTitle,
      @NonNull TextView descriptionTitle, @NonNull TextView endDate, @NonNull TextView endDateTitle,
      @NonNull TextView ownerInfo, @NonNull TextView ownerTitle, @NonNull TextView startDate,
      @NonNull TextView startDateTitle) {
    this.rootView = rootView;
    this.addCollectorFromUrlInfoCancel = addCollectorFromUrlInfoCancel;
    this.addCollectorFromUrlInfoCancel2 = addCollectorFromUrlInfoCancel2;
    this.addCollectorFromUrlInfoDescription = addCollectorFromUrlInfoDescription;
    this.appName = appName;
    this.appNameTitle = appNameTitle;
    this.collectorInfoTitle = collectorInfoTitle;
    this.descriptionTitle = descriptionTitle;
    this.endDate = endDate;
    this.endDateTitle = endDateTitle;
    this.ownerInfo = ownerInfo;
    this.ownerTitle = ownerTitle;
    this.startDate = startDate;
    this.startDateTitle = startDateTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromUrlCollectorInfoBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromUrlCollectorInfoBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_url_collector_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromUrlCollectorInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCollectorFromUrlInfoCancel;
      Button addCollectorFromUrlInfoCancel = ViewBindings.findChildViewById(rootView, id);
      if (addCollectorFromUrlInfoCancel == null) {
        break missingId;
      }

      id = R.id.addCollectorFromUrlInfoCancel2;
      Button addCollectorFromUrlInfoCancel2 = ViewBindings.findChildViewById(rootView, id);
      if (addCollectorFromUrlInfoCancel2 == null) {
        break missingId;
      }

      id = R.id.addCollectorFromUrlInfoDescription;
      TextView addCollectorFromUrlInfoDescription = ViewBindings.findChildViewById(rootView, id);
      if (addCollectorFromUrlInfoDescription == null) {
        break missingId;
      }

      id = R.id.appName;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.appNameTitle;
      TextView appNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (appNameTitle == null) {
        break missingId;
      }

      id = R.id.collectorInfoTitle;
      TextView collectorInfoTitle = ViewBindings.findChildViewById(rootView, id);
      if (collectorInfoTitle == null) {
        break missingId;
      }

      id = R.id.descriptionTitle;
      TextView descriptionTitle = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTitle == null) {
        break missingId;
      }

      id = R.id.endDate;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.endDateTitle;
      TextView endDateTitle = ViewBindings.findChildViewById(rootView, id);
      if (endDateTitle == null) {
        break missingId;
      }

      id = R.id.ownerInfo;
      TextView ownerInfo = ViewBindings.findChildViewById(rootView, id);
      if (ownerInfo == null) {
        break missingId;
      }

      id = R.id.ownerTitle;
      TextView ownerTitle = ViewBindings.findChildViewById(rootView, id);
      if (ownerTitle == null) {
        break missingId;
      }

      id = R.id.startDate;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.startDateTitle;
      TextView startDateTitle = ViewBindings.findChildViewById(rootView, id);
      if (startDateTitle == null) {
        break missingId;
      }

      return new DialogAddCollectorFromUrlCollectorInfoBinding((ConstraintLayout) rootView,
          addCollectorFromUrlInfoCancel, addCollectorFromUrlInfoCancel2,
          addCollectorFromUrlInfoDescription, appName, appNameTitle, collectorInfoTitle,
          descriptionTitle, endDate, endDateTitle, ownerInfo, ownerTitle, startDate,
          startDateTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

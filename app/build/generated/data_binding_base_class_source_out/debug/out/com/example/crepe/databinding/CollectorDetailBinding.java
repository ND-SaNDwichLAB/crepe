// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CollectorDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button collectorCloseButton;

  @NonNull
  public final TextView collectorDataFieldTitle;

  @NonNull
  public final Button collectorDeleteButton;

  @NonNull
  public final TextView collectorDetailDataField;

  @NonNull
  public final TextView collectorDetailTitle;

  @NonNull
  public final TextView collectorResearcherContact;

  @NonNull
  public final TextView collectorResearcherContactTitle;

  @NonNull
  public final Switch collectorStatusSwitch;

  private CollectorDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button collectorCloseButton, @NonNull TextView collectorDataFieldTitle,
      @NonNull Button collectorDeleteButton, @NonNull TextView collectorDetailDataField,
      @NonNull TextView collectorDetailTitle, @NonNull TextView collectorResearcherContact,
      @NonNull TextView collectorResearcherContactTitle, @NonNull Switch collectorStatusSwitch) {
    this.rootView = rootView;
    this.collectorCloseButton = collectorCloseButton;
    this.collectorDataFieldTitle = collectorDataFieldTitle;
    this.collectorDeleteButton = collectorDeleteButton;
    this.collectorDetailDataField = collectorDetailDataField;
    this.collectorDetailTitle = collectorDetailTitle;
    this.collectorResearcherContact = collectorResearcherContact;
    this.collectorResearcherContactTitle = collectorResearcherContactTitle;
    this.collectorStatusSwitch = collectorStatusSwitch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CollectorDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CollectorDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.collector_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CollectorDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.collectorCloseButton;
      Button collectorCloseButton = ViewBindings.findChildViewById(rootView, id);
      if (collectorCloseButton == null) {
        break missingId;
      }

      id = R.id.collectorDataFieldTitle;
      TextView collectorDataFieldTitle = ViewBindings.findChildViewById(rootView, id);
      if (collectorDataFieldTitle == null) {
        break missingId;
      }

      id = R.id.collectorDeleteButton;
      Button collectorDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (collectorDeleteButton == null) {
        break missingId;
      }

      id = R.id.collectorDetailDataField;
      TextView collectorDetailDataField = ViewBindings.findChildViewById(rootView, id);
      if (collectorDetailDataField == null) {
        break missingId;
      }

      id = R.id.collectorDetailTitle;
      TextView collectorDetailTitle = ViewBindings.findChildViewById(rootView, id);
      if (collectorDetailTitle == null) {
        break missingId;
      }

      id = R.id.collectorResearcherContact;
      TextView collectorResearcherContact = ViewBindings.findChildViewById(rootView, id);
      if (collectorResearcherContact == null) {
        break missingId;
      }

      id = R.id.collectorResearcherContactTitle;
      TextView collectorResearcherContactTitle = ViewBindings.findChildViewById(rootView, id);
      if (collectorResearcherContactTitle == null) {
        break missingId;
      }

      id = R.id.collectorStatusSwitch;
      Switch collectorStatusSwitch = ViewBindings.findChildViewById(rootView, id);
      if (collectorStatusSwitch == null) {
        break missingId;
      }

      return new CollectorDetailBinding((ConstraintLayout) rootView, collectorCloseButton,
          collectorDataFieldTitle, collectorDeleteButton, collectorDetailDataField,
          collectorDetailTitle, collectorResearcherContact, collectorResearcherContactTitle,
          collectorStatusSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

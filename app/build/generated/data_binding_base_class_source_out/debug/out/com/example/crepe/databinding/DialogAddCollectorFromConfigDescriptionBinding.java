// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromConfigDescriptionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton closeDescriptionImageButton;

  @NonNull
  public final TextView commentOnDescription;

  @NonNull
  public final Button descriptionBackButton;

  @NonNull
  public final Button descriptionCreateButton;

  @NonNull
  public final EditText descriptionEditText;

  @NonNull
  public final TextView descriptionPopupTitle;

  @NonNull
  public final TextView hintEnterDescription;

  private DialogAddCollectorFromConfigDescriptionBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton closeDescriptionImageButton, @NonNull TextView commentOnDescription,
      @NonNull Button descriptionBackButton, @NonNull Button descriptionCreateButton,
      @NonNull EditText descriptionEditText, @NonNull TextView descriptionPopupTitle,
      @NonNull TextView hintEnterDescription) {
    this.rootView = rootView;
    this.closeDescriptionImageButton = closeDescriptionImageButton;
    this.commentOnDescription = commentOnDescription;
    this.descriptionBackButton = descriptionBackButton;
    this.descriptionCreateButton = descriptionCreateButton;
    this.descriptionEditText = descriptionEditText;
    this.descriptionPopupTitle = descriptionPopupTitle;
    this.hintEnterDescription = hintEnterDescription;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromConfigDescriptionBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromConfigDescriptionBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_config_description, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromConfigDescriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeDescriptionImageButton;
      ImageButton closeDescriptionImageButton = ViewBindings.findChildViewById(rootView, id);
      if (closeDescriptionImageButton == null) {
        break missingId;
      }

      id = R.id.commentOnDescription;
      TextView commentOnDescription = ViewBindings.findChildViewById(rootView, id);
      if (commentOnDescription == null) {
        break missingId;
      }

      id = R.id.descriptionBackButton;
      Button descriptionBackButton = ViewBindings.findChildViewById(rootView, id);
      if (descriptionBackButton == null) {
        break missingId;
      }

      id = R.id.descriptionCreateButton;
      Button descriptionCreateButton = ViewBindings.findChildViewById(rootView, id);
      if (descriptionCreateButton == null) {
        break missingId;
      }

      id = R.id.descriptionEditText;
      EditText descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.descriptionPopupTitle;
      TextView descriptionPopupTitle = ViewBindings.findChildViewById(rootView, id);
      if (descriptionPopupTitle == null) {
        break missingId;
      }

      id = R.id.hintEnterDescription;
      TextView hintEnterDescription = ViewBindings.findChildViewById(rootView, id);
      if (hintEnterDescription == null) {
        break missingId;
      }

      return new DialogAddCollectorFromConfigDescriptionBinding((ConstraintLayout) rootView,
          closeDescriptionImageButton, commentOnDescription, descriptionBackButton,
          descriptionCreateButton, descriptionEditText, descriptionPopupTitle,
          hintEnterDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

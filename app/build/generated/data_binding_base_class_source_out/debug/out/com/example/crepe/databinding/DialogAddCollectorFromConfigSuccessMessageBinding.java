// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromConfigSuccessMessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ConstraintLayout;

  @NonNull
  public final Button closeSuccessMessagePopupButton;

  @NonNull
  public final TextView shareEmailHintText;

  @NonNull
  public final ImageButton shareEmailImageButton;

  @NonNull
  public final TextView shareText;

  @NonNull
  public final TextView shareUrlHintText;

  @NonNull
  public final ImageButton shareUrlImageButton;

  @NonNull
  public final TextView successMessageTitle;

  private DialogAddCollectorFromConfigSuccessMessageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ConstraintLayout, @NonNull Button closeSuccessMessagePopupButton,
      @NonNull TextView shareEmailHintText, @NonNull ImageButton shareEmailImageButton,
      @NonNull TextView shareText, @NonNull TextView shareUrlHintText,
      @NonNull ImageButton shareUrlImageButton, @NonNull TextView successMessageTitle) {
    this.rootView = rootView;
    this.ConstraintLayout = ConstraintLayout;
    this.closeSuccessMessagePopupButton = closeSuccessMessagePopupButton;
    this.shareEmailHintText = shareEmailHintText;
    this.shareEmailImageButton = shareEmailImageButton;
    this.shareText = shareText;
    this.shareUrlHintText = shareUrlHintText;
    this.shareUrlImageButton = shareUrlImageButton;
    this.successMessageTitle = successMessageTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromConfigSuccessMessageBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromConfigSuccessMessageBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_config_success_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromConfigSuccessMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout ConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.closeSuccessMessagePopupButton;
      Button closeSuccessMessagePopupButton = ViewBindings.findChildViewById(rootView, id);
      if (closeSuccessMessagePopupButton == null) {
        break missingId;
      }

      id = R.id.shareEmailHintText;
      TextView shareEmailHintText = ViewBindings.findChildViewById(rootView, id);
      if (shareEmailHintText == null) {
        break missingId;
      }

      id = R.id.shareEmailImageButton;
      ImageButton shareEmailImageButton = ViewBindings.findChildViewById(rootView, id);
      if (shareEmailImageButton == null) {
        break missingId;
      }

      id = R.id.shareText;
      TextView shareText = ViewBindings.findChildViewById(rootView, id);
      if (shareText == null) {
        break missingId;
      }

      id = R.id.shareUrlHintText;
      TextView shareUrlHintText = ViewBindings.findChildViewById(rootView, id);
      if (shareUrlHintText == null) {
        break missingId;
      }

      id = R.id.shareUrlImageButton;
      ImageButton shareUrlImageButton = ViewBindings.findChildViewById(rootView, id);
      if (shareUrlImageButton == null) {
        break missingId;
      }

      id = R.id.successMessageTitle;
      TextView successMessageTitle = ViewBindings.findChildViewById(rootView, id);
      if (successMessageTitle == null) {
        break missingId;
      }

      return new DialogAddCollectorFromConfigSuccessMessageBinding((ConstraintLayout) rootView,
          ConstraintLayout, closeSuccessMessagePopupButton, shareEmailHintText,
          shareEmailImageButton, shareText, shareUrlHintText, shareUrlImageButton,
          successMessageTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

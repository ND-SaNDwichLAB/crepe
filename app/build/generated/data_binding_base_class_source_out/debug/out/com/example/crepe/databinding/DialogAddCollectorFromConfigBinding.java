// Generated by view binder compiler. Do not edit!
package com.example.crepe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crepe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddCollectorFromConfigBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addCollectorFromConfigDialogCancelButton;

  @NonNull
  public final Button addCollectorFromConfigDialogNextButton;

  @NonNull
  public final ConstraintLayout addConfig;

  @NonNull
  public final Spinner appSpinner;

  @NonNull
  public final TextView commentOnAppSpinner;

  @NonNull
  public final TextView commentOnLocationSpinner;

  @NonNull
  public final TextView configPopupTitle;

  @NonNull
  public final EditText endDateText;

  @NonNull
  public final ImageButton endImageButton;

  @NonNull
  public final TextView endTextView;

  @NonNull
  public final TextView hintEnterApp;

  @NonNull
  public final TextView hintEnterLocation;

  @NonNull
  public final Spinner locationSpinner;

  @NonNull
  public final TextView startDateHintText;

  @NonNull
  public final EditText startDateText;

  @NonNull
  public final ImageButton startImageButton;

  private DialogAddCollectorFromConfigBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addCollectorFromConfigDialogCancelButton,
      @NonNull Button addCollectorFromConfigDialogNextButton, @NonNull ConstraintLayout addConfig,
      @NonNull Spinner appSpinner, @NonNull TextView commentOnAppSpinner,
      @NonNull TextView commentOnLocationSpinner, @NonNull TextView configPopupTitle,
      @NonNull EditText endDateText, @NonNull ImageButton endImageButton,
      @NonNull TextView endTextView, @NonNull TextView hintEnterApp,
      @NonNull TextView hintEnterLocation, @NonNull Spinner locationSpinner,
      @NonNull TextView startDateHintText, @NonNull EditText startDateText,
      @NonNull ImageButton startImageButton) {
    this.rootView = rootView;
    this.addCollectorFromConfigDialogCancelButton = addCollectorFromConfigDialogCancelButton;
    this.addCollectorFromConfigDialogNextButton = addCollectorFromConfigDialogNextButton;
    this.addConfig = addConfig;
    this.appSpinner = appSpinner;
    this.commentOnAppSpinner = commentOnAppSpinner;
    this.commentOnLocationSpinner = commentOnLocationSpinner;
    this.configPopupTitle = configPopupTitle;
    this.endDateText = endDateText;
    this.endImageButton = endImageButton;
    this.endTextView = endTextView;
    this.hintEnterApp = hintEnterApp;
    this.hintEnterLocation = hintEnterLocation;
    this.locationSpinner = locationSpinner;
    this.startDateHintText = startDateHintText;
    this.startDateText = startDateText;
    this.startImageButton = startImageButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddCollectorFromConfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddCollectorFromConfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_collector_from_config, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddCollectorFromConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCollectorFromConfigDialogCancelButton;
      Button addCollectorFromConfigDialogCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (addCollectorFromConfigDialogCancelButton == null) {
        break missingId;
      }

      id = R.id.addCollectorFromConfigDialogNextButton;
      Button addCollectorFromConfigDialogNextButton = ViewBindings.findChildViewById(rootView, id);
      if (addCollectorFromConfigDialogNextButton == null) {
        break missingId;
      }

      ConstraintLayout addConfig = (ConstraintLayout) rootView;

      id = R.id.appSpinner;
      Spinner appSpinner = ViewBindings.findChildViewById(rootView, id);
      if (appSpinner == null) {
        break missingId;
      }

      id = R.id.commentOnAppSpinner;
      TextView commentOnAppSpinner = ViewBindings.findChildViewById(rootView, id);
      if (commentOnAppSpinner == null) {
        break missingId;
      }

      id = R.id.commentOnLocationSpinner;
      TextView commentOnLocationSpinner = ViewBindings.findChildViewById(rootView, id);
      if (commentOnLocationSpinner == null) {
        break missingId;
      }

      id = R.id.configPopupTitle;
      TextView configPopupTitle = ViewBindings.findChildViewById(rootView, id);
      if (configPopupTitle == null) {
        break missingId;
      }

      id = R.id.endDateText;
      EditText endDateText = ViewBindings.findChildViewById(rootView, id);
      if (endDateText == null) {
        break missingId;
      }

      id = R.id.endImageButton;
      ImageButton endImageButton = ViewBindings.findChildViewById(rootView, id);
      if (endImageButton == null) {
        break missingId;
      }

      id = R.id.endTextView;
      TextView endTextView = ViewBindings.findChildViewById(rootView, id);
      if (endTextView == null) {
        break missingId;
      }

      id = R.id.hintEnterApp;
      TextView hintEnterApp = ViewBindings.findChildViewById(rootView, id);
      if (hintEnterApp == null) {
        break missingId;
      }

      id = R.id.hintEnterLocation;
      TextView hintEnterLocation = ViewBindings.findChildViewById(rootView, id);
      if (hintEnterLocation == null) {
        break missingId;
      }

      id = R.id.locationSpinner;
      Spinner locationSpinner = ViewBindings.findChildViewById(rootView, id);
      if (locationSpinner == null) {
        break missingId;
      }

      id = R.id.startDateHintText;
      TextView startDateHintText = ViewBindings.findChildViewById(rootView, id);
      if (startDateHintText == null) {
        break missingId;
      }

      id = R.id.startDateText;
      EditText startDateText = ViewBindings.findChildViewById(rootView, id);
      if (startDateText == null) {
        break missingId;
      }

      id = R.id.startImageButton;
      ImageButton startImageButton = ViewBindings.findChildViewById(rootView, id);
      if (startImageButton == null) {
        break missingId;
      }

      return new DialogAddCollectorFromConfigBinding((ConstraintLayout) rootView,
          addCollectorFromConfigDialogCancelButton, addCollectorFromConfigDialogNextButton,
          addConfig, appSpinner, commentOnAppSpinner, commentOnLocationSpinner, configPopupTitle,
          endDateText, endImageButton, endTextView, hintEnterApp, hintEnterLocation,
          locationSpinner, startDateHintText, startDateText, startImageButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
